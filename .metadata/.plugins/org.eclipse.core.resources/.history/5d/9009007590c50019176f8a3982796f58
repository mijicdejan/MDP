package org.unibl.etf.monitoring;

import java.awt.AWTException;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

import javax.imageio.ImageIO;
import javax.net.ssl.SSLSocket;

import org.unibl.etf.main.Main;

public class MonitoringAdminThread extends Thread {
	
	private ObjectOutputStream out;
	private ObjectInputStream in;
	
	private boolean active;
	
	public MonitoringAdminThread(SSLSocket socket) {
		try {
			out = new ObjectOutputStream(socket.getOutputStream());
			in = new ObjectInputStream(socket.getInputStream());
		} catch (IOException e) {
			e.printStackTrace();
		}
		active = true;
	}
	
	@Override
	public void run() {
		try {
			while(active) {
				String requestType = (String) in.readObject();
				if("END".equals(requestType)) {
					active = false;
				} else if("MONITOR".equals(requestType)) {
					String username = (String) in.readObject();
					ObjectInputStream userIn = Main.getMonitorIn(username);
					ObjectOutputStream userOut = Main.getMonitorOut(username);
					userOut.writeObject("MONITORING");
					BufferedImage image = ImageIO.read(userIn);
					ImageIO.write(image, "png", out);
					out.flush();
				}
			}
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void listenForEnd() {
		new Thread(new Runnable() {
			@Override
			public void run() {
				
			}
		}).start();
	}

}
