package org.unibl.etf.util;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;

public class SerializationManager {
	
private static SerializationManager instance;
	
	private SerializationManager() {}
	
	public static SerializationManager getInstance() {
		if(instance == null) {
			instance = new SerializationManager();
		}
		return instance;
	}
	
	public void serializeWithJava(ArrayList<String> data) {
		String fileName = PropertyManager.getInstance().getJavaFile();
		try {
			FileOutputStream fos = new FileOutputStream(fileName);
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			oos.writeObject(data);
			oos.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@SuppressWarnings("unchecked")
	public ArrayList<String> deserializeWithJava() {
		ArrayList<String> data = new ArrayList<>();
		String fileName = PropertyManager.getInstance().getJavaFile();
		try {
			FileInputStream fis = new FileInputStream(fileName);
			ObjectInputStream ois = new ObjectInputStream(fis);
			data = (ArrayList<String>) ois.readObject();
			ois.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		return data;
	}
	
	public void serializeWithGson(ArrayList<String> data) {
		String fileName = PropertyManager.getInstance().getGsonFile();
		Gson gson = new Gson();
		try {
			FileWriter out = new FileWriter(new File(fileName));
			out.write(gson.toJson(data));
			out.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public ArrayList<String> deserializeWithGson() {
		ArrayList<String> data = new ArrayList<>();
		String fileName = PropertyManager.getInstance().getGsonFile();
		Gson gson = new Gson();
		try {
			BufferedReader br = new BufferedReader(new FileReader(new File(fileName)));
			data = (ArrayList<String>) Arrays.asList(gson.fromJson(br.readLine(), String[].class));
			br.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (JsonSyntaxException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return data;
	}

}
